// <auto-generated />
using System;
using GymDL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymDL.Migrations
{
    [DbContext(typeof(GymContext))]
    partial class GymContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymDL.Models.CyclingSessionEF", b =>
                {
                    b.Property<int>("CyclingSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CyclingSessionId"));

                    b.Property<double>("Avg_Cadence")
                        .HasColumnType("float");

                    b.Property<double>("Avg_watt")
                        .HasColumnType("float");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<double>("Max_Cadence")
                        .HasColumnType("float");

                    b.Property<double>("Max_watt")
                        .HasColumnType("float");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("TrainingType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CyclingSessionId");

                    b.HasIndex("MemberId");

                    b.ToTable("Cyclingsessions");
                });

            modelBuilder.Entity("GymDL.Models.EquipmentEF", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentId"));

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InService")
                        .HasColumnType("bit");

                    b.HasKey("EquipmentId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("GymDL.Models.MemberEF", b =>
                {
                    b.Property<int?>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MemberId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("GymDL.Models.ProgramEF", b =>
                {
                    b.Property<string>("ProgramCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaxMembers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgramCode");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("GymDL.Models.ReservationEF", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("TimeSlotId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("MemberId");

                    b.HasIndex("TimeSlotId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("GymDL.Models.RunningSessionDetailEF", b =>
                {
                    b.Property<int>("RunningSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RunningSessionId"));

                    b.Property<float>("IntervalSpeed")
                        .HasColumnType("real");

                    b.Property<int>("IntervalTime")
                        .HasColumnType("int");

                    b.Property<int>("RunningSessionMainRunningSessionId")
                        .HasColumnType("int");

                    b.Property<int>("SeqNr")
                        .HasColumnType("int");

                    b.HasKey("RunningSessionId");

                    b.HasIndex("RunningSessionMainRunningSessionId");

                    b.ToTable("RunningSessionDetails");
                });

            modelBuilder.Entity("GymDL.Models.RunningSessionMainEF", b =>
                {
                    b.Property<int>("RunningSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RunningSessionId"));

                    b.Property<float>("AvgSpeed")
                        .HasColumnType("real");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("RunningSessionId");

                    b.HasIndex("MemberId");

                    b.ToTable("runningSessionMains");
                });

            modelBuilder.Entity("GymDL.Models.TimeSlotEF", b =>
                {
                    b.Property<int>("TimeSlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeSlotId"));

                    b.Property<int>("EndTime")
                        .HasColumnType("int");

                    b.Property<string>("PartOfDay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StartTime")
                        .HasColumnType("int");

                    b.HasKey("TimeSlotId");

                    b.ToTable("timeSlots");
                });

            modelBuilder.Entity("MemberEFProgramEF", b =>
                {
                    b.Property<int>("MembersMemberId")
                        .HasColumnType("int");

                    b.Property<string>("ProgramsProgramCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MembersMemberId", "ProgramsProgramCode");

                    b.HasIndex("ProgramsProgramCode");

                    b.ToTable("MemberEFProgramEF");
                });

            modelBuilder.Entity("GymDL.Models.CyclingSessionEF", b =>
                {
                    b.HasOne("GymDL.Models.MemberEF", "Member")
                        .WithMany("CyclingSessions")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("GymDL.Models.ReservationEF", b =>
                {
                    b.HasOne("GymDL.Models.EquipmentEF", "Equipment")
                        .WithMany("Reservations")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymDL.Models.MemberEF", "Member")
                        .WithMany("Reservations")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymDL.Models.TimeSlotEF", "TimeSlot")
                        .WithMany("Reservations")
                        .HasForeignKey("TimeSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Member");

                    b.Navigation("TimeSlot");
                });

            modelBuilder.Entity("GymDL.Models.RunningSessionDetailEF", b =>
                {
                    b.HasOne("GymDL.Models.RunningSessionMainEF", "RunningSessionMain")
                        .WithMany("Details")
                        .HasForeignKey("RunningSessionMainRunningSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RunningSessionMain");
                });

            modelBuilder.Entity("GymDL.Models.RunningSessionMainEF", b =>
                {
                    b.HasOne("GymDL.Models.MemberEF", "Member")
                        .WithMany("RunningSessions")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("MemberEFProgramEF", b =>
                {
                    b.HasOne("GymDL.Models.MemberEF", null)
                        .WithMany()
                        .HasForeignKey("MembersMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymDL.Models.ProgramEF", null)
                        .WithMany()
                        .HasForeignKey("ProgramsProgramCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GymDL.Models.EquipmentEF", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("GymDL.Models.MemberEF", b =>
                {
                    b.Navigation("CyclingSessions");

                    b.Navigation("Reservations");

                    b.Navigation("RunningSessions");
                });

            modelBuilder.Entity("GymDL.Models.RunningSessionMainEF", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("GymDL.Models.TimeSlotEF", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
